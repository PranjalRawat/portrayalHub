name: PortfolioApi Test Models

on:
    push:
        branches-ignore:
            - none # This line ensures it runs on all branches

jobs:
    build:
        runs-on: ubuntu-latest
        strategy:
            max-parallel: 4
            matrix:
                python-version: [3.9]

        services:
            postgres:
                image: postgres:latest
                env:
                    POSTGRES_USER: ${{ secrets.USER }}
                    POSTGRES_PASSWORD: ${{ secrets.PASSWORD }}
                    POSTGRES_DB: ${{ secrets.NAME }}
                ports:
                    - 5432:5432
                options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

        steps:
            - uses: actions/checkout@v3
            - name: Set up Python ${{ matrix.python-version }}
              uses: actions/setup-python@v3
              with:
                  python-version: ${{ matrix.python-version }}
            - name: Install Dependencies
              run: |
                  python -m pip install --upgrade pip
                  pip install -r requirements.txt
            - name: Run Model Tests
              run: |
                  python manage.py test portfolioApi.tests.models
              env:
                  SECRET_KEY: ${{ secrets.SECRET_KEY }}
                  DEBUG: ${{ secrets.DEBUG }}
                  ALLOWED_HOSTS: ${{ secrets.ALLOWED_HOSTS }}
                  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
                  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
                  AWS_SES_REGION: ${{ secrets.AWS_SES_REGION }}
                  AWS_SES_REGION_ENDPOINT: ${{ secrets.AWS_SES_REGION_ENDPOINT }}
                  Email_from: ${{ secrets.Email_from }}
                  Email_to: ${{ secrets.Email_to }}
                  ENGINE: ${{ secrets.ENGINE}}
                  NAME: ${{ secrets.NAME }}
                  USER: ${{ secrets.USER }}
                  PASSWORD: ${{ secrets.PASSWORD }}
                  HOST: ${{ secrets.HOST }}
                  PORT: ${{ secrets.PORT }}
                  DATABASE_URL: postgres://postgres:${{ secrets.PASSWORD }}@${{ secrets.HOST }}:${{ secrets.PORT }}/${{ secrets.NAME }}
